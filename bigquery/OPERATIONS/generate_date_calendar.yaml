type: procedure
category:
  - operations
  - date
  - featured
  - new
description: Generates a complete date calendar <table>.
arguments:
  - name: table_name
    type: string
  - name: start_date
    type: string
  - name: end_date
    type: string
output:
  name: date_calendar
  type: any type
examples:
  - description: ""
    arguments:
      - 'justfunctions.test.date_calendar'
      - '2020-01-01'
      - '2023-01-01'
    output: |
        |   date_id |    date     |     epoch     | day_suffix |  day_name  | day_name_abbr | day_of_week | day_of_month | day_of_quarter | day_of_year | week_of_month | week_of_year | week_of_year_iso | month | month_name | month_name_abbr | quarter | quarter_name | year | start_of_week | start_of_week_saturday | start_of_month | mid_of_month | start_of_quarter | start_of_year | start_of_financial_year | end_of_financial_year | end_of_week | end_of_month | end_of_quarter | end_of_year |  yyyymm |  yyyymmdd | month_desc | quarter_desc | week_desc | is_weekend |
        |----------:|------------:|--------------:|-----------:|------------:|--------------:|------------:|--------------:|---------------:|------------:|---------------:|--------------:|-----------------:|-------:|------------:|----------------:|--------:|-------------:|------:|--------------:|----------------:|---------:|-----------:|----------------:|-------------:|----------------:|------------------:|------------:|------------:|--------------:|------------:|--------:|----------:|-----------:|--------------:|-----------:|-----------------:|
        |  20200101 |  2020-01-01 |   1577836800 |       1th |  Wednesday  |          Wed |          4  |           1  |              1  |          1  |            1  |           1  |           2020-W01-3  |     1  |    January  |            Jan  |      1  |          Q1  |  2020  |  2019-12-30  |           2019-12-28  |  2020-01-01  |  2020-01-15  |     2020-01-01  |  2020-01-01  |          2019-10-01  |        2020-09-30  |  2020-01-03  | 2020-01-31  |   2020-03-31  | 2020-12-31  | 202001  | 20200101  |   2020-Jan  |     2020-Q1  |    2020-W1  |     FALSE    |
    region: ALL
code: |
    -- Drop the table if it exists
    EXECUTE IMMEDIATE 'DROP TABLE IF EXISTS ' || table_name;

    -- Create the date_calendar table
    EXECUTE IMMEDIATE 'CREATE TABLE ' || table_name || ' (date_id INT64 NOT NULL, date DATE NOT NULL, epoch INT64 NOT NULL, day_suffix STRING NOT NULL, day_name STRING NOT NULL, day_name_abbr STRING NOT NULL, day_of_week INT64 NOT NULL, day_of_month INT64 NOT NULL, day_of_quarter INT64 NOT NULL, day_of_year INT64 NOT NULL, week_of_month INT64 NOT NULL, week_of_year INT64 NOT NULL, week_of_year_iso STRING NOT NULL, month_ INT64 NOT NULL, month_name STRING NOT NULL, month_name_abbr STRING NOT NULL, quarter INT64 NOT NULL, quarter_name STRING NOT NULL, year INT64 NOT NULL, start_of_week DATE NOT NULL,start_of_week_saturday DATE NOT NULL, start_of_month DATE NOT NULL, mid_of_month DATE NOT NULL, start_of_quarter DATE NOT NULL, start_of_year DATE NOT NULL, end_of_week DATE NOT NULL, end_of_month DATE NOT NULL, end_of_quarter DATE NOT NULL, end_of_year DATE NOT NULL,start_of_fiscal_year DATE NOT NULL,end_of_fiscal_year DATE NOT NULL, yyyymm STRING NOT NULL, yyyymmdd STRING NOT NULL, month_desc STRING, quarter_desc STRING, week_desc STRING, is_weekend BOOL NOT NULL);';

    -- Populate the table
    EXECUTE IMMEDIATE 'INSERT INTO ' || table_name || ' WITH date_range AS (SELECT date FROM UNNEST(GENERATE_DATE_ARRAY("' || start_date || '","' || end_date  || '")) AS date) SELECT CAST(FORMAT_DATE("%Y%m%d", date) AS INT64) AS date_id, date AS date, UNIX_SECONDS(TIMESTAMP(date)) AS epoch, CONCAT(CAST(EXTRACT(DAY FROM date) AS STRING), "th") AS day_suffix, FORMAT_DATE("%A", date) AS day_name, FORMAT_DATE("%a", date) AS day_name_abbr, EXTRACT(DAYOFWEEK FROM date) AS day_of_week, EXTRACT(DAY FROM date) AS day_of_month, EXTRACT(DAY FROM date) - EXTRACT(DAY FROM DATE_TRUNC(date, QUARTER)) + 1 AS day_of_quarter, EXTRACT(DAYOFYEAR FROM date) AS day_of_year, EXTRACT(WEEK FROM date) - EXTRACT(WEEK FROM DATE_TRUNC(date, MONTH)) + 1 AS week_of_month, CAST(FORMAT_DATE("%V", date) AS INT64) AS week_of_year, FORMAT_DATE("%G-W%V-%u", date) AS week_of_year_iso, EXTRACT(MONTH FROM date) AS month, FORMAT_DATE("%B", date) AS month_name, FORMAT_DATE("%b", date) AS month_name_abbr, EXTRACT(QUARTER FROM date) AS quarter, CONCAT("Q", CAST(EXTRACT(QUARTER FROM date) AS STRING)) AS quarter_name, EXTRACT(YEAR FROM date) AS year, DATE_TRUNC(date, WEEK(MONDAY)) AS start_of_week,DATE_TRUNC(date, WEEK(SATURDAY)) AS start_of_week_saturday, DATE_TRUNC(date, MONTH) AS start_of_month, DATE_ADD(DATE_TRUNC(date, MONTH), INTERVAL 14 DAY) AS mid_of_month, DATE_TRUNC(date, QUARTER) AS start_of_quarter, DATE_TRUNC(date, YEAR) AS start_of_year, DATE_ADD(DATE_TRUNC(date, WEEK(SATURDAY)), INTERVAL 6 DAY) AS end_of_week, LAST_DAY(date, MONTH) AS end_of_month, LAST_DAY(date, QUARTER) AS end_of_quarter, LAST_DAY(date, YEAR) AS end_of_year,     CAST(IF(EXTRACT(MONTH FROM date) >= 10,     DATE(EXTRACT(YEAR FROM date), 10, 1),    DATE(EXTRACT(YEAR FROM date) - 1, 10, 1)) AS DATE) AS start_of_fiscal_year,CAST(IF(EXTRACT(MONTH FROM date) >= 10,     DATE(EXTRACT(YEAR FROM date) + 1, 9, 30),     DATE(EXTRACT(YEAR FROM date), 9, 30) ) AS DATE) AS end_of_fiscal_year,FORMAT_DATE("%Y%m", date) AS yyyymm, FORMAT_DATE("%Y%m%d", date) AS yyyymmdd, CONCAT(CAST(EXTRACT(YEAR FROM date) AS STRING), "-", FORMAT_DATE("%b", date)) AS month_desc, CONCAT(CAST(EXTRACT(YEAR FROM date) AS STRING), "-Q", CAST(EXTRACT(QUARTER FROM date) AS STRING)) AS quarter_desc, CONCAT(CAST(EXTRACT(YEAR FROM date) AS STRING), "-","W",CAST(FORMAT_DATE("%V", date) AS INT64)) AS week_desc, CASE WHEN EXTRACT(DAYOFWEEK FROM date) IN (6, 7) THEN TRUE ELSE FALSE END AS is_weekend FROM date_range;';